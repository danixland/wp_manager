#------------------------------------------------------------------------------
#                           ### Display help text ###
#------------------------------------------------------------------------------
# USAGE: $0 -h
usage() {

    license="`basename $0` is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA."

    echo "$(basename $0) version ${VERSION}"
    echo "written by ${AUTHOR}"
    echo -e "${GREEN}${license}${COLOR_RESET}"
    echo -e "\n$(basename $0) is a bash script to install and manage WordPress VHosts in a LAMP environment\n"
    echo "USAGE: `basename $0 ` [OPTION] [vhostname]"
    echo -e "\nOptions:"
    echo -e "-h, --help\t\t\tshow this the help and exits."
    echo -e "-w, --write-config\t\tGenerate a config file for this script."
    echo -e "-t, --test-config\t\tcheck the config and display a brief summary."
    echo -e "-s, --base-setup\t\tSetup the local cache, downloads WordPress and the basic plugins."
    echo -e "-b, --base-update\t\tUpdates the local cached WordPress codebase and plugins"
    echo -e "-l, --list\t\t\tLists all VirtualHosts created by this script."
    echo -e "-i, --install-new <NEW SITE>\tInstall the VHost 'NEW SITE'"
    echo -e "-d, --delete <SITE NAME>\tDeletes the VHost 'SITE NAME' and all of its data"
    echo -e "-u, --update\t\t\tUpdates all VHosts created by this script."
    echo -e "-k, --backup <SITE NAME>\tCreates a backup of the VHost 'SITE NAME'."
}

#------------------------------------------------------------------------------
#                           ### Generate config file ###
#------------------------------------------------------------------------------
# USAGE: $0 -w
generateconf() {
    if [ -r $SCRIPTCONFIG ]; then
        echo "Backing up current '${SCRIPTCONFIG}' to ${SCRIPTCONFIG}.$(date +%Y%m%d_%H%M)."
        mv -f ${SCRIPTCONFIG} ${SCRIPTCONFIG}.$(date +%Y%m%d_%H%M)
    fi
    echo "Writing '${SCRIPTCONFIG}'."
    sed  -n '/^set_defaults() {/,/^} # end set_defaults, do not change this line./p' $0 \
        | grep -v set_defaults \
        | sed -e 's/^\([^=]*\)=\${\1:-\([^}]*\)}/\1=\2/' \
        | sed -e 's/^\(WP_PLUGINS\)=\${\1:-\([^=]*\)/\1=\2/' -e 's/}$//' \
        > ${SCRIPTCONFIG}
    if [ -r ${SCRIPTCONFIG} ]; then
        echo -e "${GREEN}${SCRIPTCONFIG} written correctly. Exiting now."
        echo -e ${COLOR_RESET}
        rm -f $PIDFILE
    else
        echo -e ${RED}
        echo "Could not write '${SCRIPTCONFIG}'. Exiting."
        echo -e ${COLOR_RESET}
        rm -f $PIDFILE
        exit $E_WRITECONFERR
    fi
}

#------------------------------------------------------------------------------
#                           ### List our VHosts ###
#------------------------------------------------------------------------------
# USAGE: $0 -l
list_vhosts() {
    if [ -n "$VHOSTLIST" ]; then
        VHOSTCOUNT=$(echo ${VHOSTLIST} | wc -w)
        echo -e "This script has generated ${VHOSTCOUNT} Virtual Hosts.\n"
        echo $VHOSTLIST
    else
        echo "no vhosts yet. Create one first"
    fi
}

#------------------------------------------------------------------------------
#                           ### Display config ###
#------------------------------------------------------------------------------
display_config() {
    echo -e "${GREEN}CURRENT CONFIGURATION:${COLOR_RESET} \n"
    echo -e "Config File\t\t = ${BLUE}$SCRIPTCONFIG${COLOR_RESET}"
    echo -e "Webserver\t\t = ${GREEN}$WEBSERVER${COLOR_RESET}"
    echo -e "Apache config\t\t = ${GREEN}$APACHECONF${COLOR_RESET}"
    echo -e "Apache user:group\t = ${GREEN}${APACHEUSER}:${APACHEGROUP}${COLOR_RESET}"
    echo -e "Server Admin\t\t = ${GREEN}$SERVERADMIN${COLOR_RESET}"
    echo -e "vhost config Directory\t = ${GREEN}$VHOSTCONFDIR${COLOR_RESET}"
    echo -e "vhost config file\t = ${GREEN}$VHOSTCONF${COLOR_RESET}"
    echo -e "Base Directory\t\t = ${GREEN}$BASEDIR${COLOR_RESET}"
    echo -e "tmp Directory\t\t = ${GREEN}$TMPDIR${COLOR_RESET}"
    echo -e "Backup Directory\t = ${GREEN}$BACKUPDIR${COLOR_RESET}"
    echo -e "Username\t\t = ${GREEN}$DBUSER${COLOR_RESET}"
    echo -e "Password\t\t = ${GREEN}$DBPASS${COLOR_RESET}"
    echo -e "Host\t\t\t = ${GREEN}$HOST${COLOR_RESET}"
}

